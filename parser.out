Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> code
Rule 1     code -> statement SEMICOLON
Rule 2     statement -> INTDEC NAME is_assing
Rule 3     is_assing -> = expression
Rule 4     is_assing -> <empty>
Rule 5     statement -> FLOATDEC NAME is_assing
Rule 6     statement -> BOOLEANDEC NAME is_assing
Rule 7     statement -> STRINGDEC NAME is_assing
Rule 8     statement -> PRINT ( expression )
Rule 9     statement -> NAME = expression
Rule 10    statement -> expression
Rule 11    expression -> expression + expression
Rule 12    expression -> expression - expression
Rule 13    expression -> expression * expression
Rule 14    expression -> expression / expression
Rule 15    expression -> expression ^ expression
Rule 16    expression -> - expression
Rule 17    expression -> ( expression )
Rule 18    expression -> INUMBER
Rule 19    expression -> FNUMBER
Rule 20    expression -> BOOLEAN
Rule 21    expression -> STRING
Rule 22    expression -> NAME

Terminals, with rules where they appear

(                    : 8 17
)                    : 8 17
*                    : 13
+                    : 11
-                    : 12 16
/                    : 14
=                    : 3 9
BOOLEAN              : 20
BOOLEANDEC           : 6
FLOATDEC             : 5
FNUMBER              : 19
INTDEC               : 2
INUMBER              : 18
NAME                 : 2 5 6 7 9 22
PRINT                : 8
SEMICOLON            : 1
STRING               : 21
STRINGDEC            : 7
^                    : 15
error                : 

Nonterminals, with rules where they appear

code                 : 0
expression           : 3 8 9 10 11 11 12 12 13 13 14 14 15 15 16 17
is_assing            : 2 5 6 7
statement            : 1

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . statement SEMICOLON
    (2) statement -> . INTDEC NAME is_assing
    (5) statement -> . FLOATDEC NAME is_assing
    (6) statement -> . BOOLEANDEC NAME is_assing
    (7) statement -> . STRINGDEC NAME is_assing
    (8) statement -> . PRINT ( expression )
    (9) statement -> . NAME = expression
    (10) statement -> . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    INTDEC          shift and go to state 3
    FLOATDEC        shift and go to state 5
    BOOLEANDEC      shift and go to state 6
    STRINGDEC       shift and go to state 7
    PRINT           shift and go to state 8
    NAME            shift and go to state 4
    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15

    code                           shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 10

state 1

    (0) S' -> code .



state 2

    (1) code -> statement . SEMICOLON

    SEMICOLON       shift and go to state 16


state 3

    (2) statement -> INTDEC . NAME is_assing

    NAME            shift and go to state 17


state 4

    (9) statement -> NAME . = expression
    (22) expression -> NAME .

    =               shift and go to state 18
    +               reduce using rule 22 (expression -> NAME .)
    -               reduce using rule 22 (expression -> NAME .)
    *               reduce using rule 22 (expression -> NAME .)
    /               reduce using rule 22 (expression -> NAME .)
    ^               reduce using rule 22 (expression -> NAME .)
    SEMICOLON       reduce using rule 22 (expression -> NAME .)


state 5

    (5) statement -> FLOATDEC . NAME is_assing

    NAME            shift and go to state 19


state 6

    (6) statement -> BOOLEANDEC . NAME is_assing

    NAME            shift and go to state 20


state 7

    (7) statement -> STRINGDEC . NAME is_assing

    NAME            shift and go to state 21


state 8

    (8) statement -> PRINT . ( expression )

    (               shift and go to state 22


state 9

    (17) expression -> ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 23

state 10

    (10) statement -> expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    SEMICOLON       reduce using rule 10 (statement -> expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29


state 11

    (16) expression -> - . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 30

state 12

    (18) expression -> INUMBER .

    +               reduce using rule 18 (expression -> INUMBER .)
    -               reduce using rule 18 (expression -> INUMBER .)
    *               reduce using rule 18 (expression -> INUMBER .)
    /               reduce using rule 18 (expression -> INUMBER .)
    ^               reduce using rule 18 (expression -> INUMBER .)
    SEMICOLON       reduce using rule 18 (expression -> INUMBER .)
    )               reduce using rule 18 (expression -> INUMBER .)


state 13

    (19) expression -> FNUMBER .

    +               reduce using rule 19 (expression -> FNUMBER .)
    -               reduce using rule 19 (expression -> FNUMBER .)
    *               reduce using rule 19 (expression -> FNUMBER .)
    /               reduce using rule 19 (expression -> FNUMBER .)
    ^               reduce using rule 19 (expression -> FNUMBER .)
    SEMICOLON       reduce using rule 19 (expression -> FNUMBER .)
    )               reduce using rule 19 (expression -> FNUMBER .)


state 14

    (20) expression -> BOOLEAN .

    +               reduce using rule 20 (expression -> BOOLEAN .)
    -               reduce using rule 20 (expression -> BOOLEAN .)
    *               reduce using rule 20 (expression -> BOOLEAN .)
    /               reduce using rule 20 (expression -> BOOLEAN .)
    ^               reduce using rule 20 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 20 (expression -> BOOLEAN .)
    )               reduce using rule 20 (expression -> BOOLEAN .)


state 15

    (21) expression -> STRING .

    +               reduce using rule 21 (expression -> STRING .)
    -               reduce using rule 21 (expression -> STRING .)
    *               reduce using rule 21 (expression -> STRING .)
    /               reduce using rule 21 (expression -> STRING .)
    ^               reduce using rule 21 (expression -> STRING .)
    SEMICOLON       reduce using rule 21 (expression -> STRING .)
    )               reduce using rule 21 (expression -> STRING .)


state 16

    (1) code -> statement SEMICOLON .

    $end            reduce using rule 1 (code -> statement SEMICOLON .)


state 17

    (2) statement -> INTDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 32
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 31

state 18

    (9) statement -> NAME = . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 33

state 19

    (5) statement -> FLOATDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 32
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 34

state 20

    (6) statement -> BOOLEANDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 32
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 35

state 21

    (7) statement -> STRINGDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 32
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 36

state 22

    (8) statement -> PRINT ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 37

state 23

    (17) expression -> ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    )               shift and go to state 38
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29


state 24

    (22) expression -> NAME .

    )               reduce using rule 22 (expression -> NAME .)
    +               reduce using rule 22 (expression -> NAME .)
    -               reduce using rule 22 (expression -> NAME .)
    *               reduce using rule 22 (expression -> NAME .)
    /               reduce using rule 22 (expression -> NAME .)
    ^               reduce using rule 22 (expression -> NAME .)
    SEMICOLON       reduce using rule 22 (expression -> NAME .)


state 25

    (11) expression -> expression + . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 39

state 26

    (12) expression -> expression - . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 40

state 27

    (13) expression -> expression * . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 41

state 28

    (14) expression -> expression / . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 42

state 29

    (15) expression -> expression ^ . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 43

state 30

    (16) expression -> - expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    +               reduce using rule 16 (expression -> - expression .)
    -               reduce using rule 16 (expression -> - expression .)
    *               reduce using rule 16 (expression -> - expression .)
    /               reduce using rule 16 (expression -> - expression .)
    ^               reduce using rule 16 (expression -> - expression .)
    SEMICOLON       reduce using rule 16 (expression -> - expression .)
    )               reduce using rule 16 (expression -> - expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! ^               [ shift and go to state 29 ]


state 31

    (2) statement -> INTDEC NAME is_assing .

    SEMICOLON       reduce using rule 2 (statement -> INTDEC NAME is_assing .)


state 32

    (3) is_assing -> = . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . - expression
    (17) expression -> . ( expression )
    (18) expression -> . INUMBER
    (19) expression -> . FNUMBER
    (20) expression -> . BOOLEAN
    (21) expression -> . STRING
    (22) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 44

state 33

    (9) statement -> NAME = expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    SEMICOLON       reduce using rule 9 (statement -> NAME = expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29


state 34

    (5) statement -> FLOATDEC NAME is_assing .

    SEMICOLON       reduce using rule 5 (statement -> FLOATDEC NAME is_assing .)


state 35

    (6) statement -> BOOLEANDEC NAME is_assing .

    SEMICOLON       reduce using rule 6 (statement -> BOOLEANDEC NAME is_assing .)


state 36

    (7) statement -> STRINGDEC NAME is_assing .

    SEMICOLON       reduce using rule 7 (statement -> STRINGDEC NAME is_assing .)


state 37

    (8) statement -> PRINT ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    )               shift and go to state 45
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29


state 38

    (17) expression -> ( expression ) .

    +               reduce using rule 17 (expression -> ( expression ) .)
    -               reduce using rule 17 (expression -> ( expression ) .)
    *               reduce using rule 17 (expression -> ( expression ) .)
    /               reduce using rule 17 (expression -> ( expression ) .)
    ^               reduce using rule 17 (expression -> ( expression ) .)
    SEMICOLON       reduce using rule 17 (expression -> ( expression ) .)
    )               reduce using rule 17 (expression -> ( expression ) .)


state 39

    (11) expression -> expression + expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    +               reduce using rule 11 (expression -> expression + expression .)
    -               reduce using rule 11 (expression -> expression + expression .)
    ^               reduce using rule 11 (expression -> expression + expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression + expression .)
    )               reduce using rule 11 (expression -> expression + expression .)
    *               shift and go to state 27
    /               shift and go to state 28

  ! *               [ reduce using rule 11 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 11 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! ^               [ shift and go to state 29 ]


state 40

    (12) expression -> expression - expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    +               reduce using rule 12 (expression -> expression - expression .)
    -               reduce using rule 12 (expression -> expression - expression .)
    ^               reduce using rule 12 (expression -> expression - expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression - expression .)
    )               reduce using rule 12 (expression -> expression - expression .)
    *               shift and go to state 27
    /               shift and go to state 28

  ! *               [ reduce using rule 12 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 12 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! ^               [ shift and go to state 29 ]


state 41

    (13) expression -> expression * expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    +               reduce using rule 13 (expression -> expression * expression .)
    -               reduce using rule 13 (expression -> expression * expression .)
    *               reduce using rule 13 (expression -> expression * expression .)
    /               reduce using rule 13 (expression -> expression * expression .)
    ^               reduce using rule 13 (expression -> expression * expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression * expression .)
    )               reduce using rule 13 (expression -> expression * expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! ^               [ shift and go to state 29 ]


state 42

    (14) expression -> expression / expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    +               reduce using rule 14 (expression -> expression / expression .)
    -               reduce using rule 14 (expression -> expression / expression .)
    *               reduce using rule 14 (expression -> expression / expression .)
    /               reduce using rule 14 (expression -> expression / expression .)
    ^               reduce using rule 14 (expression -> expression / expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression / expression .)
    )               reduce using rule 14 (expression -> expression / expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! ^               [ shift and go to state 29 ]


state 43

    (15) expression -> expression ^ expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
    SEMICOLON       reduce using rule 15 (expression -> expression ^ expression .)
    )               reduce using rule 15 (expression -> expression ^ expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29

  ! +               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 15 (expression -> expression ^ expression .) ]


state 44

    (3) is_assing -> = expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression

    SEMICOLON       reduce using rule 3 (is_assing -> = expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29


state 45

    (8) statement -> PRINT ( expression ) .

    SEMICOLON       reduce using rule 8 (statement -> PRINT ( expression ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 43 resolved as shift
WARNING: shift/reduce conflict for - in state 43 resolved as shift
WARNING: shift/reduce conflict for * in state 43 resolved as shift
WARNING: shift/reduce conflict for / in state 43 resolved as shift
WARNING: shift/reduce conflict for ^ in state 43 resolved as shift
