Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> code
Rule 1     code -> statement SEMICOLON
Rule 2     statement -> INTDEC NAME is_assing
Rule 3     is_assing -> = expression
Rule 4     is_assing -> <empty>
Rule 5     statement -> FLOATDEC NAME is_assing
Rule 6     statement -> BOOLEANDEC NAME is_assing
Rule 7     statement -> STRINGDEC NAME is_assing
Rule 8     statement -> PRINT ( expression )
Rule 9     statement -> NAME = expression
Rule 10    statement -> expression
Rule 11    expression -> expression + expression
Rule 12    expression -> expression - expression
Rule 13    expression -> expression * expression
Rule 14    expression -> expression / expression
Rule 15    expression -> expression ^ expression
Rule 16    expression -> expression EQUAL expression
Rule 17    expression -> expression NOTEQUAL expression
Rule 18    expression -> expression GREATER expression
Rule 19    expression -> expression LESSTHAN expression
Rule 20    expression -> expression GREATEREQUAL expression
Rule 21    expression -> expression LESSEQUAL expression
Rule 22    expression -> - expression
Rule 23    expression -> ( expression )
Rule 24    expression -> INUMBER
Rule 25    expression -> FNUMBER
Rule 26    expression -> BOOLEAN
Rule 27    expression -> STRING
Rule 28    expression -> NAME

Terminals, with rules where they appear

(                    : 8 23
)                    : 8 23
*                    : 13
+                    : 11
-                    : 12 22
/                    : 14
=                    : 3 9
BOOLEAN              : 26
BOOLEANDEC           : 6
EQUAL                : 16
FLOATDEC             : 5
FNUMBER              : 25
GREATER              : 18
GREATEREQUAL         : 20
INTDEC               : 2
INUMBER              : 24
LESSEQUAL            : 21
LESSTHAN             : 19
NAME                 : 2 5 6 7 9 28
NOTEQUAL             : 17
PRINT                : 8
SEMICOLON            : 1
STRING               : 27
STRINGDEC            : 7
^                    : 15
error                : 

Nonterminals, with rules where they appear

code                 : 0
expression           : 3 8 9 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 23
is_assing            : 2 5 6 7
statement            : 1

Parsing method: LALR

state 0

    (0) S' -> . code
    (1) code -> . statement SEMICOLON
    (2) statement -> . INTDEC NAME is_assing
    (5) statement -> . FLOATDEC NAME is_assing
    (6) statement -> . BOOLEANDEC NAME is_assing
    (7) statement -> . STRINGDEC NAME is_assing
    (8) statement -> . PRINT ( expression )
    (9) statement -> . NAME = expression
    (10) statement -> . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    INTDEC          shift and go to state 3
    FLOATDEC        shift and go to state 5
    BOOLEANDEC      shift and go to state 6
    STRINGDEC       shift and go to state 7
    PRINT           shift and go to state 8
    NAME            shift and go to state 4
    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15

    code                           shift and go to state 1
    statement                      shift and go to state 2
    expression                     shift and go to state 10

state 1

    (0) S' -> code .



state 2

    (1) code -> statement . SEMICOLON

    SEMICOLON       shift and go to state 16


state 3

    (2) statement -> INTDEC . NAME is_assing

    NAME            shift and go to state 17


state 4

    (9) statement -> NAME . = expression
    (28) expression -> NAME .

    =               shift and go to state 18
    +               reduce using rule 28 (expression -> NAME .)
    -               reduce using rule 28 (expression -> NAME .)
    *               reduce using rule 28 (expression -> NAME .)
    /               reduce using rule 28 (expression -> NAME .)
    ^               reduce using rule 28 (expression -> NAME .)
    EQUAL           reduce using rule 28 (expression -> NAME .)
    NOTEQUAL        reduce using rule 28 (expression -> NAME .)
    GREATER         reduce using rule 28 (expression -> NAME .)
    LESSTHAN        reduce using rule 28 (expression -> NAME .)
    GREATEREQUAL    reduce using rule 28 (expression -> NAME .)
    LESSEQUAL       reduce using rule 28 (expression -> NAME .)
    SEMICOLON       reduce using rule 28 (expression -> NAME .)


state 5

    (5) statement -> FLOATDEC . NAME is_assing

    NAME            shift and go to state 19


state 6

    (6) statement -> BOOLEANDEC . NAME is_assing

    NAME            shift and go to state 20


state 7

    (7) statement -> STRINGDEC . NAME is_assing

    NAME            shift and go to state 21


state 8

    (8) statement -> PRINT . ( expression )

    (               shift and go to state 22


state 9

    (23) expression -> ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 23

state 10

    (10) statement -> expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 10 (statement -> expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35


state 11

    (22) expression -> - . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 36

state 12

    (24) expression -> INUMBER .

    +               reduce using rule 24 (expression -> INUMBER .)
    -               reduce using rule 24 (expression -> INUMBER .)
    *               reduce using rule 24 (expression -> INUMBER .)
    /               reduce using rule 24 (expression -> INUMBER .)
    ^               reduce using rule 24 (expression -> INUMBER .)
    EQUAL           reduce using rule 24 (expression -> INUMBER .)
    NOTEQUAL        reduce using rule 24 (expression -> INUMBER .)
    GREATER         reduce using rule 24 (expression -> INUMBER .)
    LESSTHAN        reduce using rule 24 (expression -> INUMBER .)
    GREATEREQUAL    reduce using rule 24 (expression -> INUMBER .)
    LESSEQUAL       reduce using rule 24 (expression -> INUMBER .)
    SEMICOLON       reduce using rule 24 (expression -> INUMBER .)
    )               reduce using rule 24 (expression -> INUMBER .)


state 13

    (25) expression -> FNUMBER .

    +               reduce using rule 25 (expression -> FNUMBER .)
    -               reduce using rule 25 (expression -> FNUMBER .)
    *               reduce using rule 25 (expression -> FNUMBER .)
    /               reduce using rule 25 (expression -> FNUMBER .)
    ^               reduce using rule 25 (expression -> FNUMBER .)
    EQUAL           reduce using rule 25 (expression -> FNUMBER .)
    NOTEQUAL        reduce using rule 25 (expression -> FNUMBER .)
    GREATER         reduce using rule 25 (expression -> FNUMBER .)
    LESSTHAN        reduce using rule 25 (expression -> FNUMBER .)
    GREATEREQUAL    reduce using rule 25 (expression -> FNUMBER .)
    LESSEQUAL       reduce using rule 25 (expression -> FNUMBER .)
    SEMICOLON       reduce using rule 25 (expression -> FNUMBER .)
    )               reduce using rule 25 (expression -> FNUMBER .)


state 14

    (26) expression -> BOOLEAN .

    +               reduce using rule 26 (expression -> BOOLEAN .)
    -               reduce using rule 26 (expression -> BOOLEAN .)
    *               reduce using rule 26 (expression -> BOOLEAN .)
    /               reduce using rule 26 (expression -> BOOLEAN .)
    ^               reduce using rule 26 (expression -> BOOLEAN .)
    EQUAL           reduce using rule 26 (expression -> BOOLEAN .)
    NOTEQUAL        reduce using rule 26 (expression -> BOOLEAN .)
    GREATER         reduce using rule 26 (expression -> BOOLEAN .)
    LESSTHAN        reduce using rule 26 (expression -> BOOLEAN .)
    GREATEREQUAL    reduce using rule 26 (expression -> BOOLEAN .)
    LESSEQUAL       reduce using rule 26 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 26 (expression -> BOOLEAN .)
    )               reduce using rule 26 (expression -> BOOLEAN .)


state 15

    (27) expression -> STRING .

    +               reduce using rule 27 (expression -> STRING .)
    -               reduce using rule 27 (expression -> STRING .)
    *               reduce using rule 27 (expression -> STRING .)
    /               reduce using rule 27 (expression -> STRING .)
    ^               reduce using rule 27 (expression -> STRING .)
    EQUAL           reduce using rule 27 (expression -> STRING .)
    NOTEQUAL        reduce using rule 27 (expression -> STRING .)
    GREATER         reduce using rule 27 (expression -> STRING .)
    LESSTHAN        reduce using rule 27 (expression -> STRING .)
    GREATEREQUAL    reduce using rule 27 (expression -> STRING .)
    LESSEQUAL       reduce using rule 27 (expression -> STRING .)
    SEMICOLON       reduce using rule 27 (expression -> STRING .)
    )               reduce using rule 27 (expression -> STRING .)


state 16

    (1) code -> statement SEMICOLON .

    $end            reduce using rule 1 (code -> statement SEMICOLON .)


state 17

    (2) statement -> INTDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 38
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 37

state 18

    (9) statement -> NAME = . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 39

state 19

    (5) statement -> FLOATDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 38
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 40

state 20

    (6) statement -> BOOLEANDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 38
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 41

state 21

    (7) statement -> STRINGDEC NAME . is_assing
    (3) is_assing -> . = expression
    (4) is_assing -> .

    =               shift and go to state 38
    SEMICOLON       reduce using rule 4 (is_assing -> .)

    is_assing                      shift and go to state 42

state 22

    (8) statement -> PRINT ( . expression )
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 43

state 23

    (23) expression -> ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    )               shift and go to state 44
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35


state 24

    (28) expression -> NAME .

    )               reduce using rule 28 (expression -> NAME .)
    +               reduce using rule 28 (expression -> NAME .)
    -               reduce using rule 28 (expression -> NAME .)
    *               reduce using rule 28 (expression -> NAME .)
    /               reduce using rule 28 (expression -> NAME .)
    ^               reduce using rule 28 (expression -> NAME .)
    EQUAL           reduce using rule 28 (expression -> NAME .)
    NOTEQUAL        reduce using rule 28 (expression -> NAME .)
    GREATER         reduce using rule 28 (expression -> NAME .)
    LESSTHAN        reduce using rule 28 (expression -> NAME .)
    GREATEREQUAL    reduce using rule 28 (expression -> NAME .)
    LESSEQUAL       reduce using rule 28 (expression -> NAME .)
    SEMICOLON       reduce using rule 28 (expression -> NAME .)


state 25

    (11) expression -> expression + . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 45

state 26

    (12) expression -> expression - . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 46

state 27

    (13) expression -> expression * . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 47

state 28

    (14) expression -> expression / . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 48

state 29

    (15) expression -> expression ^ . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 49

state 30

    (16) expression -> expression EQUAL . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 50

state 31

    (17) expression -> expression NOTEQUAL . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 51

state 32

    (18) expression -> expression GREATER . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 52

state 33

    (19) expression -> expression LESSTHAN . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 53

state 34

    (20) expression -> expression GREATEREQUAL . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 54

state 35

    (21) expression -> expression LESSEQUAL . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 55

state 36

    (22) expression -> - expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    +               reduce using rule 22 (expression -> - expression .)
    -               reduce using rule 22 (expression -> - expression .)
    *               reduce using rule 22 (expression -> - expression .)
    /               reduce using rule 22 (expression -> - expression .)
    ^               reduce using rule 22 (expression -> - expression .)
    EQUAL           reduce using rule 22 (expression -> - expression .)
    NOTEQUAL        reduce using rule 22 (expression -> - expression .)
    GREATER         reduce using rule 22 (expression -> - expression .)
    LESSTHAN        reduce using rule 22 (expression -> - expression .)
    GREATEREQUAL    reduce using rule 22 (expression -> - expression .)
    LESSEQUAL       reduce using rule 22 (expression -> - expression .)
    SEMICOLON       reduce using rule 22 (expression -> - expression .)
    )               reduce using rule 22 (expression -> - expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! ^               [ shift and go to state 29 ]
  ! EQUAL           [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 33 ]
  ! GREATEREQUAL    [ shift and go to state 34 ]
  ! LESSEQUAL       [ shift and go to state 35 ]


state 37

    (2) statement -> INTDEC NAME is_assing .

    SEMICOLON       reduce using rule 2 (statement -> INTDEC NAME is_assing .)


state 38

    (3) is_assing -> = . expression
    (11) expression -> . expression + expression
    (12) expression -> . expression - expression
    (13) expression -> . expression * expression
    (14) expression -> . expression / expression
    (15) expression -> . expression ^ expression
    (16) expression -> . expression EQUAL expression
    (17) expression -> . expression NOTEQUAL expression
    (18) expression -> . expression GREATER expression
    (19) expression -> . expression LESSTHAN expression
    (20) expression -> . expression GREATEREQUAL expression
    (21) expression -> . expression LESSEQUAL expression
    (22) expression -> . - expression
    (23) expression -> . ( expression )
    (24) expression -> . INUMBER
    (25) expression -> . FNUMBER
    (26) expression -> . BOOLEAN
    (27) expression -> . STRING
    (28) expression -> . NAME

    -               shift and go to state 11
    (               shift and go to state 9
    INUMBER         shift and go to state 12
    FNUMBER         shift and go to state 13
    BOOLEAN         shift and go to state 14
    STRING          shift and go to state 15
    NAME            shift and go to state 24

    expression                     shift and go to state 56

state 39

    (9) statement -> NAME = expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 9 (statement -> NAME = expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35


state 40

    (5) statement -> FLOATDEC NAME is_assing .

    SEMICOLON       reduce using rule 5 (statement -> FLOATDEC NAME is_assing .)


state 41

    (6) statement -> BOOLEANDEC NAME is_assing .

    SEMICOLON       reduce using rule 6 (statement -> BOOLEANDEC NAME is_assing .)


state 42

    (7) statement -> STRINGDEC NAME is_assing .

    SEMICOLON       reduce using rule 7 (statement -> STRINGDEC NAME is_assing .)


state 43

    (8) statement -> PRINT ( expression . )
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    )               shift and go to state 57
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35


state 44

    (23) expression -> ( expression ) .

    +               reduce using rule 23 (expression -> ( expression ) .)
    -               reduce using rule 23 (expression -> ( expression ) .)
    *               reduce using rule 23 (expression -> ( expression ) .)
    /               reduce using rule 23 (expression -> ( expression ) .)
    ^               reduce using rule 23 (expression -> ( expression ) .)
    EQUAL           reduce using rule 23 (expression -> ( expression ) .)
    NOTEQUAL        reduce using rule 23 (expression -> ( expression ) .)
    GREATER         reduce using rule 23 (expression -> ( expression ) .)
    LESSTHAN        reduce using rule 23 (expression -> ( expression ) .)
    GREATEREQUAL    reduce using rule 23 (expression -> ( expression ) .)
    LESSEQUAL       reduce using rule 23 (expression -> ( expression ) .)
    SEMICOLON       reduce using rule 23 (expression -> ( expression ) .)
    )               reduce using rule 23 (expression -> ( expression ) .)


state 45

    (11) expression -> expression + expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    +               reduce using rule 11 (expression -> expression + expression .)
    -               reduce using rule 11 (expression -> expression + expression .)
    ^               reduce using rule 11 (expression -> expression + expression .)
    EQUAL           reduce using rule 11 (expression -> expression + expression .)
    NOTEQUAL        reduce using rule 11 (expression -> expression + expression .)
    GREATER         reduce using rule 11 (expression -> expression + expression .)
    LESSTHAN        reduce using rule 11 (expression -> expression + expression .)
    GREATEREQUAL    reduce using rule 11 (expression -> expression + expression .)
    LESSEQUAL       reduce using rule 11 (expression -> expression + expression .)
    SEMICOLON       reduce using rule 11 (expression -> expression + expression .)
    )               reduce using rule 11 (expression -> expression + expression .)
    *               shift and go to state 27
    /               shift and go to state 28

  ! *               [ reduce using rule 11 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 11 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! ^               [ shift and go to state 29 ]
  ! EQUAL           [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 33 ]
  ! GREATEREQUAL    [ shift and go to state 34 ]
  ! LESSEQUAL       [ shift and go to state 35 ]


state 46

    (12) expression -> expression - expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    +               reduce using rule 12 (expression -> expression - expression .)
    -               reduce using rule 12 (expression -> expression - expression .)
    ^               reduce using rule 12 (expression -> expression - expression .)
    EQUAL           reduce using rule 12 (expression -> expression - expression .)
    NOTEQUAL        reduce using rule 12 (expression -> expression - expression .)
    GREATER         reduce using rule 12 (expression -> expression - expression .)
    LESSTHAN        reduce using rule 12 (expression -> expression - expression .)
    GREATEREQUAL    reduce using rule 12 (expression -> expression - expression .)
    LESSEQUAL       reduce using rule 12 (expression -> expression - expression .)
    SEMICOLON       reduce using rule 12 (expression -> expression - expression .)
    )               reduce using rule 12 (expression -> expression - expression .)
    *               shift and go to state 27
    /               shift and go to state 28

  ! *               [ reduce using rule 12 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 12 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! ^               [ shift and go to state 29 ]
  ! EQUAL           [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 33 ]
  ! GREATEREQUAL    [ shift and go to state 34 ]
  ! LESSEQUAL       [ shift and go to state 35 ]


state 47

    (13) expression -> expression * expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    +               reduce using rule 13 (expression -> expression * expression .)
    -               reduce using rule 13 (expression -> expression * expression .)
    *               reduce using rule 13 (expression -> expression * expression .)
    /               reduce using rule 13 (expression -> expression * expression .)
    ^               reduce using rule 13 (expression -> expression * expression .)
    EQUAL           reduce using rule 13 (expression -> expression * expression .)
    NOTEQUAL        reduce using rule 13 (expression -> expression * expression .)
    GREATER         reduce using rule 13 (expression -> expression * expression .)
    LESSTHAN        reduce using rule 13 (expression -> expression * expression .)
    GREATEREQUAL    reduce using rule 13 (expression -> expression * expression .)
    LESSEQUAL       reduce using rule 13 (expression -> expression * expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression * expression .)
    )               reduce using rule 13 (expression -> expression * expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! ^               [ shift and go to state 29 ]
  ! EQUAL           [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 33 ]
  ! GREATEREQUAL    [ shift and go to state 34 ]
  ! LESSEQUAL       [ shift and go to state 35 ]


state 48

    (14) expression -> expression / expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    +               reduce using rule 14 (expression -> expression / expression .)
    -               reduce using rule 14 (expression -> expression / expression .)
    *               reduce using rule 14 (expression -> expression / expression .)
    /               reduce using rule 14 (expression -> expression / expression .)
    ^               reduce using rule 14 (expression -> expression / expression .)
    EQUAL           reduce using rule 14 (expression -> expression / expression .)
    NOTEQUAL        reduce using rule 14 (expression -> expression / expression .)
    GREATER         reduce using rule 14 (expression -> expression / expression .)
    LESSTHAN        reduce using rule 14 (expression -> expression / expression .)
    GREATEREQUAL    reduce using rule 14 (expression -> expression / expression .)
    LESSEQUAL       reduce using rule 14 (expression -> expression / expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression / expression .)
    )               reduce using rule 14 (expression -> expression / expression .)

  ! +               [ shift and go to state 25 ]
  ! -               [ shift and go to state 26 ]
  ! *               [ shift and go to state 27 ]
  ! /               [ shift and go to state 28 ]
  ! ^               [ shift and go to state 29 ]
  ! EQUAL           [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 31 ]
  ! GREATER         [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 33 ]
  ! GREATEREQUAL    [ shift and go to state 34 ]
  ! LESSEQUAL       [ shift and go to state 35 ]


state 49

    (15) expression -> expression ^ expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 15 (expression -> expression ^ expression .)
    )               reduce using rule 15 (expression -> expression ^ expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! EQUAL           [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! NOTEQUAL        [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! GREATER         [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! LESSTHAN        [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! GREATEREQUAL    [ reduce using rule 15 (expression -> expression ^ expression .) ]
  ! LESSEQUAL       [ reduce using rule 15 (expression -> expression ^ expression .) ]


state 50

    (16) expression -> expression EQUAL expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 16 (expression -> expression EQUAL expression .)
    )               reduce using rule 16 (expression -> expression EQUAL expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! -               [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! *               [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! /               [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! ^               [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! EQUAL           [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! GREATER         [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 16 (expression -> expression EQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 16 (expression -> expression EQUAL expression .) ]


state 51

    (17) expression -> expression NOTEQUAL expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 17 (expression -> expression NOTEQUAL expression .)
    )               reduce using rule 17 (expression -> expression NOTEQUAL expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! -               [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! *               [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! ^               [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! GREATER         [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 17 (expression -> expression NOTEQUAL expression .) ]


state 52

    (18) expression -> expression GREATER expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 18 (expression -> expression GREATER expression .)
    )               reduce using rule 18 (expression -> expression GREATER expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! ^               [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! EQUAL           [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! NOTEQUAL        [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! GREATER         [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! LESSTHAN        [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! GREATEREQUAL    [ reduce using rule 18 (expression -> expression GREATER expression .) ]
  ! LESSEQUAL       [ reduce using rule 18 (expression -> expression GREATER expression .) ]


state 53

    (19) expression -> expression LESSTHAN expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression LESSTHAN expression .)
    )               reduce using rule 19 (expression -> expression LESSTHAN expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! ^               [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! EQUAL           [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! NOTEQUAL        [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! GREATER         [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! GREATEREQUAL    [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]
  ! LESSEQUAL       [ reduce using rule 19 (expression -> expression LESSTHAN expression .) ]


state 54

    (20) expression -> expression GREATEREQUAL expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression GREATEREQUAL expression .)
    )               reduce using rule 20 (expression -> expression GREATEREQUAL expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! -               [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! *               [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! /               [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! ^               [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! EQUAL           [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! GREATER         [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 20 (expression -> expression GREATEREQUAL expression .) ]


state 55

    (21) expression -> expression LESSEQUAL expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for GREATEREQUAL resolved as shift
  ! shift/reduce conflict for LESSEQUAL resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression LESSEQUAL expression .)
    )               reduce using rule 21 (expression -> expression LESSEQUAL expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35

  ! +               [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! -               [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! *               [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! /               [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! ^               [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! GREATER         [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! GREATEREQUAL    [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]
  ! LESSEQUAL       [ reduce using rule 21 (expression -> expression LESSEQUAL expression .) ]


state 56

    (3) is_assing -> = expression .
    (11) expression -> expression . + expression
    (12) expression -> expression . - expression
    (13) expression -> expression . * expression
    (14) expression -> expression . / expression
    (15) expression -> expression . ^ expression
    (16) expression -> expression . EQUAL expression
    (17) expression -> expression . NOTEQUAL expression
    (18) expression -> expression . GREATER expression
    (19) expression -> expression . LESSTHAN expression
    (20) expression -> expression . GREATEREQUAL expression
    (21) expression -> expression . LESSEQUAL expression

    SEMICOLON       reduce using rule 3 (is_assing -> = expression .)
    +               shift and go to state 25
    -               shift and go to state 26
    *               shift and go to state 27
    /               shift and go to state 28
    ^               shift and go to state 29
    EQUAL           shift and go to state 30
    NOTEQUAL        shift and go to state 31
    GREATER         shift and go to state 32
    LESSTHAN        shift and go to state 33
    GREATEREQUAL    shift and go to state 34
    LESSEQUAL       shift and go to state 35


state 57

    (8) statement -> PRINT ( expression ) .

    SEMICOLON       reduce using rule 8 (statement -> PRINT ( expression ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 49 resolved as shift
WARNING: shift/reduce conflict for - in state 49 resolved as shift
WARNING: shift/reduce conflict for * in state 49 resolved as shift
WARNING: shift/reduce conflict for / in state 49 resolved as shift
WARNING: shift/reduce conflict for ^ in state 49 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 49 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 49 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 49 resolved as shift
WARNING: shift/reduce conflict for + in state 50 resolved as shift
WARNING: shift/reduce conflict for - in state 50 resolved as shift
WARNING: shift/reduce conflict for * in state 50 resolved as shift
WARNING: shift/reduce conflict for / in state 50 resolved as shift
WARNING: shift/reduce conflict for ^ in state 50 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 50 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for + in state 51 resolved as shift
WARNING: shift/reduce conflict for - in state 51 resolved as shift
WARNING: shift/reduce conflict for * in state 51 resolved as shift
WARNING: shift/reduce conflict for / in state 51 resolved as shift
WARNING: shift/reduce conflict for ^ in state 51 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 51 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 51 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 51 resolved as shift
WARNING: shift/reduce conflict for + in state 52 resolved as shift
WARNING: shift/reduce conflict for - in state 52 resolved as shift
WARNING: shift/reduce conflict for * in state 52 resolved as shift
WARNING: shift/reduce conflict for / in state 52 resolved as shift
WARNING: shift/reduce conflict for ^ in state 52 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for + in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for * in state 53 resolved as shift
WARNING: shift/reduce conflict for / in state 53 resolved as shift
WARNING: shift/reduce conflict for ^ in state 53 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 53 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 53 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 53 resolved as shift
WARNING: shift/reduce conflict for + in state 54 resolved as shift
WARNING: shift/reduce conflict for - in state 54 resolved as shift
WARNING: shift/reduce conflict for * in state 54 resolved as shift
WARNING: shift/reduce conflict for / in state 54 resolved as shift
WARNING: shift/reduce conflict for ^ in state 54 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 54 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 54 resolved as shift
WARNING: shift/reduce conflict for + in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for * in state 55 resolved as shift
WARNING: shift/reduce conflict for / in state 55 resolved as shift
WARNING: shift/reduce conflict for ^ in state 55 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 55 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATEREQUAL in state 55 resolved as shift
WARNING: shift/reduce conflict for LESSEQUAL in state 55 resolved as shift
