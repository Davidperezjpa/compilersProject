
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'left+-left*/rightUMINUSAND BOOLEAN BOOLEANDEC ELIF ELSE EQUAL FLOATDEC FNUMBER GREATER GREATEREQUAL IF INTDEC INUMBER LESSEQUAL LESSTHAN NAME NOTEQUAL OR PRINT SEMICOLON STRING STRINGDEC block : code block\n            | code code : statement SEMICOLON \n        |   flowctrl  statement : INTDEC NAME is_assing\n    statement : FLOATDEC NAME is_assingstatement : BOOLEANDEC NAME is_assingstatement : STRINGDEC NAME is_assingstatement : PRINT \'(\' expression \')\' statement : NAME "=" expressionstatement : expressionexpression : expression_boolean\n                | is_assing : "=" expression \n                | expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'^\' expressionexpression_boolean : expression EQUAL expression\n                  | expression NOTEQUAL expression\n                  | expression GREATER expression\n                  | expression LESSTHAN expression\n                  | expression GREATEREQUAL expression\n                  | expression LESSEQUAL expressionexpression_boolean : expression AND expression\n                  | expression OR expressionexpression : \'-\' expression %prec UMINUSexpression : \'(\' expression \')\'expression : INUMBERexpression : FNUMBERexpression :  BOOLEANexpression :  STRINGexpression : NAME flowctrl : IF \'(\' expression_boolean \')\' \'{\' block \'}\' elif else  elif : ELIF \'(\' expression_boolean \')\' \'{\' block \'}\' elif else \n        |   else : ELSE \'{\' block \'}\' \n        |  '
    
_lr_action_items = {'INTDEC':([0,2,4,21,71,73,74,76,79,83,84,86,87,88,],[5,5,-4,-3,5,-38,-40,-36,5,-39,5,-38,-40,-37,]),'FLOATDEC':([0,2,4,21,71,73,74,76,79,83,84,86,87,88,],[7,7,-4,-3,7,-38,-40,-36,7,-39,7,-38,-40,-37,]),'BOOLEANDEC':([0,2,4,21,71,73,74,76,79,83,84,86,87,88,],[8,8,-4,-3,8,-38,-40,-36,8,-39,8,-38,-40,-37,]),'STRINGDEC':([0,2,4,21,71,73,74,76,79,83,84,86,87,88,],[9,9,-4,-3,9,-38,-40,-36,9,-39,9,-38,-40,-37,]),'PRINT':([0,2,4,21,71,73,74,76,79,83,84,86,87,88,],[10,10,-4,-3,10,-38,-40,-36,10,-39,10,-38,-40,-37,]),'NAME':([0,2,4,5,7,8,9,11,15,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,73,74,76,78,79,83,84,86,87,88,],[6,6,-4,22,24,25,26,29,29,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,6,-38,-40,-36,29,6,-39,6,-38,-40,-37,]),'IF':([0,2,4,21,71,73,74,76,79,83,84,86,87,88,],[13,13,-4,-3,13,-38,-40,-36,13,-39,13,-38,-40,-37,]),'+':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,30,-12,-13,-31,-32,-33,-34,-3,-13,-13,30,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,30,30,-30,-16,-17,-18,-19,30,30,30,30,30,30,30,30,30,-12,30,30,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'-':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[15,15,-4,-35,15,31,-12,15,-31,-32,-33,-34,-3,15,15,31,-35,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-29,15,31,31,-30,-16,-17,-18,-19,31,31,31,31,31,31,31,31,31,-12,31,31,15,-38,-40,-36,15,15,-12,-39,15,-38,-40,-37,]),'*':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,32,-12,-13,-31,-32,-33,-34,-3,-13,-13,32,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,32,32,-30,32,32,-18,-19,32,32,32,32,32,32,32,32,32,-12,32,32,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'/':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,33,-12,-13,-31,-32,-33,-34,-3,-13,-13,33,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,33,33,-30,33,33,-18,-19,33,33,33,33,33,33,33,33,33,-12,33,33,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'^':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,34,-12,-13,-31,-32,-33,-34,-3,-13,-13,34,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,34,34,-30,-16,-17,-18,-19,34,34,34,34,34,34,34,34,34,-12,34,34,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'EQUAL':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,35,-12,-13,-31,-32,-33,-34,-3,-13,-13,35,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,35,35,-30,-16,-17,-18,-19,35,35,35,35,35,35,35,35,35,-12,35,35,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'NOTEQUAL':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,36,-12,-13,-31,-32,-33,-34,-3,-13,-13,36,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,36,36,-30,-16,-17,-18,-19,36,36,36,36,36,36,36,36,36,-12,36,36,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'GREATER':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,37,-12,-13,-31,-32,-33,-34,-3,-13,-13,37,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,37,37,-30,-16,-17,-18,-19,37,37,37,37,37,37,37,37,37,-12,37,37,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'LESSTHAN':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,38,-12,-13,-31,-32,-33,-34,-3,-13,-13,38,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,38,38,-30,-16,-17,-18,-19,38,38,38,38,38,38,38,38,38,-12,38,38,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'GREATEREQUAL':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,39,-12,-13,-31,-32,-33,-34,-3,-13,-13,39,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,39,39,-30,-16,-17,-18,-19,39,39,39,39,39,39,39,39,39,-12,39,39,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'LESSEQUAL':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,40,-12,-13,-31,-32,-33,-34,-3,-13,-13,40,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,40,40,-30,-16,-17,-18,-19,40,40,40,40,40,40,40,40,40,-12,40,40,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'AND':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,41,-12,-13,-31,-32,-33,-34,-3,-13,-13,41,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,41,41,-30,-16,-17,-18,-19,41,41,41,41,41,41,41,41,41,-12,41,41,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'OR':([0,2,4,6,11,12,14,15,16,17,18,19,21,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,73,74,76,78,79,80,83,84,86,87,88,],[-13,-13,-4,-35,-13,42,-12,-13,-31,-32,-33,-34,-3,-13,-13,42,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-13,42,42,-30,-16,-17,-18,-19,42,42,42,42,42,42,42,42,42,-12,42,42,-13,-38,-40,-36,-13,-13,-12,-39,-13,-38,-40,-37,]),'SEMICOLON':([0,2,3,4,6,12,14,15,16,17,18,19,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,69,71,73,74,76,79,83,84,86,87,88,],[-13,-13,21,-4,-35,-11,-12,-13,-31,-32,-33,-34,-3,-15,-13,-15,-15,-15,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,-5,-13,-10,-6,-7,-8,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-14,-9,-13,-38,-40,-36,-13,-39,-13,-38,-40,-37,]),'(':([0,2,4,10,11,13,15,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,73,74,75,76,78,79,83,84,86,87,88,],[11,11,-4,27,11,43,11,-3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-38,-40,78,-36,11,11,-39,11,-38,-40,-37,]),'INUMBER':([0,2,4,11,15,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,73,74,76,78,79,83,84,86,87,88,],[16,16,-4,16,16,-3,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-38,-40,-36,16,16,-39,16,-38,-40,-37,]),'FNUMBER':([0,2,4,11,15,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,73,74,76,78,79,83,84,86,87,88,],[17,17,-4,17,17,-3,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-38,-40,-36,17,17,-39,17,-38,-40,-37,]),'BOOLEAN':([0,2,4,11,15,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,73,74,76,78,79,83,84,86,87,88,],[18,18,-4,18,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-38,-40,-36,18,18,-39,18,-38,-40,-37,]),'STRING':([0,2,4,11,15,21,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,73,74,76,78,79,83,84,86,87,88,],[19,19,-4,19,19,-3,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-38,-40,-36,19,19,-39,19,-38,-40,-37,]),'$end':([1,2,4,20,21,73,74,76,83,86,87,88,],[0,-2,-4,-1,-3,-38,-40,-36,-39,-38,-40,-37,]),'}':([2,4,20,21,72,73,74,76,81,83,85,86,87,88,],[-2,-4,-1,-3,73,-38,-40,-36,83,-39,86,-38,-40,-37,]),'=':([6,22,24,25,26,],[23,46,46,46,46,]),')':([11,14,15,16,17,18,19,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,80,],[-13,-12,-13,-31,-32,-33,-34,-13,52,-35,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-13,-29,69,-30,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,70,82,]),'{':([70,77,82,],[71,79,84,]),'ELIF':([73,86,],[75,75,]),'ELSE':([73,74,83,86,87,88,],[-38,77,-39,-38,77,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block':([0,2,71,79,84,],[1,20,72,81,85,]),'code':([0,2,71,79,84,],[2,2,2,2,2,]),'statement':([0,2,71,79,84,],[3,3,3,3,3,]),'flowctrl':([0,2,71,79,84,],[4,4,4,4,4,]),'expression':([0,2,11,15,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,78,79,84,],[12,12,28,44,47,51,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,12,67,12,12,]),'expression_boolean':([0,2,11,15,23,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,71,78,79,84,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,66,14,14,80,14,14,]),'is_assing':([22,24,25,26,],[45,48,49,50,]),'elif':([73,86,],[74,87,]),'else':([74,87,],[76,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> block","S'",1,None,None,None),
  ('block -> code block','block',2,'p_block','compiler.py',108),
  ('block -> code','block',1,'p_block','compiler.py',109),
  ('code -> statement SEMICOLON','code',2,'p_code','compiler.py',113),
  ('code -> flowctrl','code',1,'p_code','compiler.py',114),
  ('statement -> INTDEC NAME is_assing','statement',3,'p_statement_declare_int','compiler.py',117),
  ('statement -> FLOATDEC NAME is_assing','statement',3,'p_statement_declare_float','compiler.py',125),
  ('statement -> BOOLEANDEC NAME is_assing','statement',3,'p_statement_declare_boolean','compiler.py',129),
  ('statement -> STRINGDEC NAME is_assing','statement',3,'p_statement_declare_string','compiler.py',133),
  ('statement -> PRINT ( expression )','statement',4,'p_statement_print','compiler.py',137),
  ('statement -> NAME = expression','statement',3,'p_statement_assign','compiler.py',141),
  ('statement -> expression','statement',1,'p_statement_expr','compiler.py',147),
  ('expression -> expression_boolean','expression',1,'p_bridge_expr_boolean','compiler.py',151),
  ('expression -> <empty>','expression',0,'p_bridge_expr_boolean','compiler.py',152),
  ('is_assing -> = expression','is_assing',2,'p_is_assing','compiler.py',156),
  ('is_assing -> <empty>','is_assing',0,'p_is_assing','compiler.py',157),
  ('expression -> expression + expression','expression',3,'p_expression_binop','compiler.py',163),
  ('expression -> expression - expression','expression',3,'p_expression_binop','compiler.py',164),
  ('expression -> expression * expression','expression',3,'p_expression_binop','compiler.py',165),
  ('expression -> expression / expression','expression',3,'p_expression_binop','compiler.py',166),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','compiler.py',167),
  ('expression_boolean -> expression EQUAL expression','expression_boolean',3,'p_expression_compare','compiler.py',181),
  ('expression_boolean -> expression NOTEQUAL expression','expression_boolean',3,'p_expression_compare','compiler.py',182),
  ('expression_boolean -> expression GREATER expression','expression_boolean',3,'p_expression_compare','compiler.py',183),
  ('expression_boolean -> expression LESSTHAN expression','expression_boolean',3,'p_expression_compare','compiler.py',184),
  ('expression_boolean -> expression GREATEREQUAL expression','expression_boolean',3,'p_expression_compare','compiler.py',185),
  ('expression_boolean -> expression LESSEQUAL expression','expression_boolean',3,'p_expression_compare','compiler.py',186),
  ('expression_boolean -> expression AND expression','expression_boolean',3,'p_expression_boleanas','compiler.py',205),
  ('expression_boolean -> expression OR expression','expression_boolean',3,'p_expression_boleanas','compiler.py',206),
  ('expression -> - expression','expression',2,'p_expression_uminus','compiler.py',218),
  ('expression -> ( expression )','expression',3,'p_expression_group','compiler.py',223),
  ('expression -> INUMBER','expression',1,'p_expression_inumber','compiler.py',228),
  ('expression -> FNUMBER','expression',1,'p_expression_fnumber','compiler.py',233),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','compiler.py',238),
  ('expression -> STRING','expression',1,'p_expression_string','compiler.py',243),
  ('expression -> NAME','expression',1,'p_expression_name','compiler.py',250),
  ('flowctrl -> IF ( expression_boolean ) { block } elif else','flowctrl',9,'p_flowctrl_if','compiler.py',284),
  ('elif -> ELIF ( expression_boolean ) { block } elif else','elif',9,'p_elif','compiler.py',289),
  ('elif -> <empty>','elif',0,'p_elif','compiler.py',290),
  ('else -> ELSE { block }','else',4,'p_else','compiler.py',295),
  ('else -> <empty>','else',0,'p_else','compiler.py',296),
]
